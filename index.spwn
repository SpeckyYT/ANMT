extract obj_props

// https://github.com/SpeckyYT/SPWN-canvas
canvas = import '../canvas/canvas.spwn'
// https://github.com/SpeckyYT/SPWN-speed
speed = import '../speed/speed.spwn'

filename = 'changeyourfilenamehere'
use_groups = false

let file = $.readfile('./videos/output/'+filename+'.txt')
let frames = file.split('\n')
let data = frames.shift().split(',')

let width = data[0] as @number
let height = data[1] as @number
let fps = data[2] as @number
let scaling = 10/height

let startdelay = 2
let enddelay = 1

let mySpeed = speed(1)

let screen = ?g

videoCanvas = canvas::new(
    0, 0,
    width, height,
    $.floor(100*scaling)/100,
    screen
)

for index in ..frames.length {
    $.print(index,' frames done')
    let frame = frames[index]
    let toChange = []
    for pixel in frame.split(':') {
        pixelData = pixel.split(',')
        
        if pixelData.length < 2 {continue}

        x = pixelData[0] as @number
        y = pixelData[1] as @number
        r = pixelData[2] as @number
        g = pixelData[3] as @number
        b = pixelData[4] as @number

        key = y*width+x

        toChange.push([
            videoCanvas.colors[x][height-(y+1)],
            r,g,b
        ])
    }
    currentTime = index * 1/fps + startdelay
    if use_groups {
        call_with_delay(currentTime, !{
            for i in ..toChange.length {
                currentData = toChange[i]
                currentData[0].set(currentData[1],currentData[2],currentData[3])
            }
        })
    } else {
        for i in ..toChange.length {
            currentData = toChange[i]
            $.add(obj{
                OBJ_ID: 899,
                X:  currentTime * (30 * mySpeed),
                Y: 30*i,
                DURATION: 0,
                TARGET_COLOR: currentData[0],
                TRIGGER_RED: currentData[1],
                TRIGGER_GREEN: currentData[2],
                TRIGGER_BLUE: currentData[3],
            })
        }
    }
}

$.add(obj{
    OBJ_ID: 1,
    X:  (frames.length * 1/fps + startdelay + enddelay) * (30 * mySpeed),
    Y: -30,
})

hide_player()
screen.lock_to_player(true,false)
toggle_bg_effect(false)
-> screen.move(-45,0,1)

for color in [BG,GROUND,LINE] {
    color.set(0,0,0)
}
